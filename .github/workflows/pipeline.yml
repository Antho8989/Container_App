name: Azure Infrastructure Deployment
on: 
  workflow_dispatch

env:
  infraDirectory:       'container_app_main' 
  terraformVersion:     '0.14.11'
  resourceGroup:        'test' 
  storageAccountName:   'test' 
  storageContainerName: 'test' 
  storageKey:           'AddCustName.tfstate' #Change the terraform .tfstate name to reflect the applicable Customer
  variableFile:         '--var-file="./AddCustName.tfvars"' #Change the terraform file location to reflect the applicable Customer
  outputfile:           '-out=test.tfstate'
  
  subscription_id:      ${{ secrets.subscription_id }}
  client_id:            ${{ secrets.client_id }}
  client_secret:        ${{ secrets.client_secret }}
  tenant_id:            ${{ secrets.tenant_id }}
  AGENT_VM_PW:          ${{ secrets.AGENT_VM_PW }}
  ADMIN_OBJECT_ID:      ${{ secrets.ADMIN_OBJECT_ID }}



  
jobs:
  Terraform_Plan:
    runs-on: 'ubuntu-latest' 
    needs: []
    if: always()
    steps:
    - uses: actions/checkout@v2
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true

    
    # - uses: actions/checkout@v2
    # - name: Azure Login  
    # - uses: Azure/login@v1
    #   with:
    #     creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

    # - name: Replace tokens
    #   uses: cschleiden/replace-tokens@v1.0
    #   with:
    #     tokenPrefix: '!__'
    #     tokenSuffix: '__!'
    #     files: '["**/*.tf", "**/*.tfvars"]'
    #   env: 
    #     resourceGroup: ${{ env.resourceGroup }}
    #     storageAccountName: ${{ env.storageAccountName }}
    #     storageContainerName: ${{ env.storageContainerName }}
    #     storageKey: ${{ env.storageKey }}
    #     subscription_id: ${{ env.subscription_id }}
    #     client_id: ${{ env.client_id }}
    #     client_secret: ${{ env.client_secret }}
    #     tenant_id: ${{ env.tenant_id }}
    #     AGENT_VM_PW: ${{ env.AGENT_VM_PW }}
    #     ADMIN_OBJECT_ID: ${{ env.ADMIN_OBJECT_ID }}

        
    - name: terraform version installer
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.11 #terraform Version
        
    - name: terraform init
      working-directory: "${{ env.infraDirectory }}"
      run: terraform init #-reconfigure -backend-config=storage_account_name='${{ env.storageAccountName }}' -backend-config=container_name='${{ env.storageContainerName }}' -backend-config=key='${{ env.storageKey }}' -backend-config=resource_group_name='${{ env.resourceGroup }}' -backend-config=arm_subscription_id='${{ env.subscription_id }}' -backend-config=arm_tenant_id='${{ env.tenant_id }}' -backend-config=arm_client_id='${{ env.client_id }}' -backend-config=arm_client_secret='${{ env.client_secret }}'
      
    - name: terraform validate
      working-directory: "${{ env.infraDirectory }}"
      run: terraform validate
      
    - name: terraform plan
      working-directory: "${{ env.infraDirectory }}"
      run: terraform plan     

    # - name: terraform apply
    #   working-directory: "${{ env.infraDirectory }}"
    #   run: terraform apply -auto-approve ${{ env.variableFile }} 
